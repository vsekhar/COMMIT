// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: batcher/batcher.proto

package batcher

import (
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	refpb "github.com/vsekhar/fabula/pkg/api/refpb"
	servicepb "github.com/vsekhar/fabula/pkg/api/servicepb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type InternalBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry *refpb.Entry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	// prefix denotes the hex prefix of entry.notarization_sha3512 that was used
	// to identify the server to which the BatchRequest is being sent.
	//
	// Root is represented by *, which is not included in any binary encoding
	// scheme. We avoid using the empty string "" as an error producing an empty
	// prefix could result in requests flooding the root batcher.
	Prefix string `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	// num_entries > 0 is the number of entries represented by this batch
	// request. For leaf batch requests (created by public notarization
	// requests), this should be 1. Higher-level batch requests will sum this
	// value.
	NumEntries uint64 `protobuf:"varint,3,opt,name=num_entries,json=numEntries,proto3" json:"num_entries,omitempty"`
}

func (x *InternalBatchRequest) Reset() {
	*x = InternalBatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_batcher_batcher_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InternalBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalBatchRequest) ProtoMessage() {}

func (x *InternalBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_batcher_batcher_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalBatchRequest.ProtoReflect.Descriptor instead.
func (*InternalBatchRequest) Descriptor() ([]byte, []int) {
	return file_batcher_batcher_proto_rawDescGZIP(), []int{0}
}

func (x *InternalBatchRequest) GetEntry() *refpb.Entry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *InternalBatchRequest) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *InternalBatchRequest) GetNumEntries() uint64 {
	if x != nil {
		return x.NumEntries
	}
	return 0
}

type InternalBatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *servicepb.NotarizeResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *InternalBatchResponse) Reset() {
	*x = InternalBatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_batcher_batcher_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InternalBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalBatchResponse) ProtoMessage() {}

func (x *InternalBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_batcher_batcher_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalBatchResponse.ProtoReflect.Descriptor instead.
func (*InternalBatchResponse) Descriptor() ([]byte, []int) {
	return file_batcher_batcher_proto_rawDescGZIP(), []int{1}
}

func (x *InternalBatchResponse) GetResponse() *servicepb.NotarizeResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

var file_batcher_batcher_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptor.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         48197,
		Name:          "fabula.root",
		Tag:           "bytes,48197,opt,name=root",
		Filename:      "batcher/batcher.proto",
	},
}

// Extension fields to descriptor.FieldOptions.
var (
	// optional string root = 48197;
	E_Root = &file_batcher_batcher_proto_extTypes[0]
)

var File_batcher_batcher_proto protoreflect.FileDescriptor

var file_batcher_batcher_proto_rawDesc = []byte{
	0x0a, 0x15, 0x62, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x66, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x1a,
	0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x09, 0x72, 0x65, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7b, 0x0a, 0x14, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x66, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x2e, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0xaa, 0xc4, 0x17, 0x01, 0x2a, 0x52,
	0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x5f, 0x65,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6e, 0x75,
	0x6d, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x4d, 0x0a, 0x15, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x34, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x2e, 0x4e, 0x6f, 0x74,
	0x61, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x61, 0x0a, 0x0f, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x0d, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1c, 0x2e, 0x66, 0x61,
	0x62, 0x75, 0x6c, 0x61, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x66, 0x61, 0x62, 0x75,
	0x6c, 0x61, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x3a, 0x36, 0x0a, 0x04, 0x72, 0x6f,
	0x6f, 0x74, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0xc5, 0xf8, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x88,
	0x01, 0x01, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x76, 0x73, 0x65, 0x6b, 0x68, 0x61, 0x72, 0x2f, 0x66, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_batcher_batcher_proto_rawDescOnce sync.Once
	file_batcher_batcher_proto_rawDescData = file_batcher_batcher_proto_rawDesc
)

func file_batcher_batcher_proto_rawDescGZIP() []byte {
	file_batcher_batcher_proto_rawDescOnce.Do(func() {
		file_batcher_batcher_proto_rawDescData = protoimpl.X.CompressGZIP(file_batcher_batcher_proto_rawDescData)
	})
	return file_batcher_batcher_proto_rawDescData
}

var file_batcher_batcher_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_batcher_batcher_proto_goTypes = []interface{}{
	(*InternalBatchRequest)(nil),       // 0: fabula.InternalBatchRequest
	(*InternalBatchResponse)(nil),      // 1: fabula.InternalBatchResponse
	(*refpb.Entry)(nil),                // 2: fabula.Entry
	(*servicepb.NotarizeResponse)(nil), // 3: fabula.NotarizeResponse
	(*descriptor.FieldOptions)(nil),    // 4: google.protobuf.FieldOptions
}
var file_batcher_batcher_proto_depIdxs = []int32{
	2, // 0: fabula.InternalBatchRequest.entry:type_name -> fabula.Entry
	3, // 1: fabula.InternalBatchResponse.response:type_name -> fabula.NotarizeResponse
	4, // 2: fabula.root:extendee -> google.protobuf.FieldOptions
	0, // 3: fabula.InternalBatcher.InternalBatch:input_type -> fabula.InternalBatchRequest
	1, // 4: fabula.InternalBatcher.InternalBatch:output_type -> fabula.InternalBatchResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	2, // [2:3] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_batcher_batcher_proto_init() }
func file_batcher_batcher_proto_init() {
	if File_batcher_batcher_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_batcher_batcher_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InternalBatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_batcher_batcher_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InternalBatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_batcher_batcher_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 1,
			NumServices:   1,
		},
		GoTypes:           file_batcher_batcher_proto_goTypes,
		DependencyIndexes: file_batcher_batcher_proto_depIdxs,
		MessageInfos:      file_batcher_batcher_proto_msgTypes,
		ExtensionInfos:    file_batcher_batcher_proto_extTypes,
	}.Build()
	File_batcher_batcher_proto = out.File
	file_batcher_batcher_proto_rawDesc = nil
	file_batcher_batcher_proto_goTypes = nil
	file_batcher_batcher_proto_depIdxs = nil
}
